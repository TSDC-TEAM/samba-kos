set(TARGET_NAME replace)

if(KOS)
    set(TARGET_SRC
            ${SMB_SRC_ROOT}/lib/replace/cwrap.c
            ${SMB_SRC_ROOT}/lib/replace/closefrom.c
            ${SMB_SRC_ROOT}/lib/replace/replace.c
            ${SMB_SRC_ROOT}/lib/replace/xattr.c
            ${SMB_SRC_ROOT}/lib/replace/strptime.c
            ${SMB_SRC_ROOT}/lib/replace/snprintf.c
    )
else()
    set(TARGET_SRC
            ${SMB_SRC_ROOT}/lib/replace/cwrap.c
            ${SMB_SRC_ROOT}/lib/replace/closefrom.c
            ${SMB_SRC_ROOT}/lib/replace/replace.c
    )
endif()

add_library(
        ${TARGET_NAME}
        STATIC
        ${TARGET_SRC}
)

target_include_directories(
        ${TARGET_NAME}
        PRIVATE
        ${SMB_SRC_ROOT}/lib/replace
        ${SMB_SRC_ROOT}/include/public
        ${SMB_SRC_ROOT}/source4
        ${SMB_SRC_ROOT}/lib
        ${SMB_SRC_ROOT}/source4/lib
        ${SMB_SRC_ROOT}/source4/include
        ${SMB_SRC_ROOT}/include
        ${SMB_SRC_ROOT}/bin/default/include
        ${SMB_SRC_ROOT}
)

if(KOS)
    target_compile_definitions(
            ${TARGET_NAME}
            PRIVATE
            _SAMBA_BUILD_=4
            HAVE_CONFIG_H=1
            _GNU_SOURCE=1
            _XOPEN_SOURCE_EXTENDED=1
            __STDC_WANT_LIB_EXT1__=1
            _REENTRANT
            STATIC_replace_MODULES=NULL
            "STATIC_replace_MODULES_PROTO=extern void __replace_dummy_module_proto(void)"
            _POSIX_PTHREAD_SEMANTICS
    )
else()
    target_compile_definitions(
            ${TARGET_NAME}
            PRIVATE
            _SAMBA_BUILD_=4
            HAVE_CONFIG_H=1
            _GNU_SOURCE=1
            _XOPEN_SOURCE_EXTENDED=1
            __STDC_WANT_LIB_EXT1__=1
            _REENTRANT
            STATIC_replace_MODULES=NULL
            "STATIC_replace_MODULES_PROTO=extern void __replace_dummy_module_proto(void)"
    )
endif()

target_compile_options(
        ${TARGET_NAME}
        PRIVATE
        -MMD
        -fPIC
        -fstack-protector-strong
        -fstack-clash-protection
)
